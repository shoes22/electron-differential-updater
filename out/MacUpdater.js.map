{"version":3,"sources":["../src/MacUpdater.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AllPublishOptions,\n  newError,\n  safeStringifyJson,\n  BlockMap,\n  CURRENT_APP_INSTALLER_FILE_NAME\n} from \"builder-util-runtime\";\nimport { stat } from \"fs-extra\";\nimport { createReadStream } from \"fs\";\nimport { AppAdapter } from \"./AppAdapter\";\nimport { BaseUpdater } from \"./BaseUpdater\";\nimport {\n  UpdateDownloadedEvent,\n  newUrlFromBase,\n  ResolvedUpdateFileInfo\n} from \"./main\";\nimport { findFile, Provider } from \"./providers/Provider\";\nimport AutoUpdater = Electron.AutoUpdater;\nimport { createServer, IncomingMessage, ServerResponse } from \"http\";\nimport { AddressInfo } from \"net\";\nimport { DownloadUpdateOptions } from \"./AppUpdater\";\nimport { GenericDifferentialDownloader } from \"./differentialDownloader/GenericDifferentialDownloader\";\nimport path from \"path\";\nimport { gunzipSync } from \"zlib\";\nimport electron from \"electron\";\n\nexport class MacUpdater extends BaseUpdater {\n  updateAvailable!: boolean;\n  protected doInstall(\n    options: import(\"./BaseUpdater\").InstallOptions\n  ): boolean {\n    throw new Error(\"Method not implemented.\");\n  }\n  private readonly nativeUpdater: AutoUpdater = electron.autoUpdater;\n\n  private updateInfoForPendingUpdateDownloadedEvent: UpdateDownloadedEvent | null = null;\n\n  constructor(options?: AllPublishOptions, app?: AppAdapter) {\n    super(options, app);\n    this.nativeUpdater.on(\"error\", it => {\n      this._logger.warn(it);\n      this.emit(\"error\", it);\n    });\n    this.nativeUpdater.on(\"update-downloaded\", () => {\n      const updateInfo = this.updateInfoForPendingUpdateDownloadedEvent;\n      this.updateInfoForPendingUpdateDownloadedEvent = null;\n      this.dispatchUpdateDownloaded(updateInfo!!);\n    });\n  }\n  private async differentialDownloadInstaller(\n    fileInfo: ResolvedUpdateFileInfo,\n    downloadUpdateOptions: DownloadUpdateOptions,\n    installerPath: string,\n    provider: Provider<any>\n  ): Promise<boolean> {\n    try {\n      if (\n        this._testOnlyOptions != null &&\n        !this._testOnlyOptions.isUseDifferentialDownload\n      ) {\n        return true;\n      }\n\n      const newBlockMapUrl = newUrlFromBase(\n        `${fileInfo.url.pathname}.blockmap`,\n        fileInfo.url\n      );\n      const oldBlockMapUrl = newUrlFromBase(\n        `${fileInfo.url.pathname.replace(\n          new RegExp(\n            downloadUpdateOptions.updateInfoAndProvider.info.version,\n            \"g\"\n          ),\n          this.app.version\n        )}.blockmap`,\n        fileInfo.url\n      );\n      this._logger.info(\n        `Download block maps (old: \"${oldBlockMapUrl.href}\", new: ${newBlockMapUrl.href})`\n      );\n\n      const downloadBlockMap = async (url: URL): Promise<BlockMap> => {\n        const data = await this.httpExecutor.downloadToBuffer(url, {\n          headers: downloadUpdateOptions.requestHeaders,\n          cancellationToken: downloadUpdateOptions.cancellationToken\n        });\n\n        if (data == null || data.length === 0) {\n          throw new Error(`Blockmap \"${url.href}\" is empty`);\n        }\n\n        try {\n          return JSON.parse(gunzipSync(data).toString());\n        } catch (e) {\n          throw new Error(\n            `Cannot parse blockmap \"${url.href}\", error: ${e}, raw data: ${data}`\n          );\n        }\n      };\n\n      const blockMapDataList = await Promise.all([\n        downloadBlockMap(oldBlockMapUrl),\n        downloadBlockMap(newBlockMapUrl)\n      ]);\n      await new GenericDifferentialDownloader(\n        fileInfo.info,\n        this.httpExecutor,\n        {\n          newUrl: fileInfo.url,\n          oldFile: path.join(\n            this.downloadedUpdateHelper!!.cacheDir,\n            process.platform === \"darwin\"\n              ? `${this.app.name}-${this.app.version}-mac.zip`\n              : CURRENT_APP_INSTALLER_FILE_NAME\n          ),\n          logger: this._logger,\n          newFile: installerPath,\n          isUseMultipleRangeRequest: provider.isUseMultipleRangeRequest,\n          requestHeaders: downloadUpdateOptions.requestHeaders\n        }\n      ).download(\n        blockMapDataList[0],\n        blockMapDataList[1],\n        this.emit.bind(this)\n      );\n      return false;\n    } catch (e) {\n      this._logger.error(\n        `Cannot download differentially, fallback to full download: ${e.stack ||\n          e}`\n      );\n      if (this._testOnlyOptions != null) {\n        // test mode\n        throw e;\n      }\n      return true;\n    }\n  }\n  protected doDownloadUpdate(\n    downloadUpdateOptions: DownloadUpdateOptions\n  ): Promise<Array<string>> {\n    this.updateInfoForPendingUpdateDownloadedEvent = null;\n    const provider = downloadUpdateOptions.updateInfoAndProvider.provider;\n    const files = downloadUpdateOptions.updateInfoAndProvider.provider.resolveFiles(\n      downloadUpdateOptions.updateInfoAndProvider.info\n    );\n    const zipFileInfo = findFile(files, \"zip\", [\"pkg\", \"dmg\"]);\n    if (zipFileInfo == null) {\n      throw newError(\n        `ZIP file not provided: ${safeStringifyJson(files)}`,\n        \"ERR_UPDATER_ZIP_FILE_NOT_FOUND\"\n      );\n    }\n    const server = createServer();\n    server.on(\"close\", () => {\n      this._logger.info(\n        `Proxy server for native Squirrel.Mac is closed (was started to download ${zipFileInfo.url.href})`\n      );\n    });\n    function getServerUrl(): string {\n      const address = server.address() as AddressInfo;\n      return `http://127.0.0.1:${address.port}`;\n    }\n    return this.executeDownload({\n      fileExtension: \"zip\",\n      fileInfo: zipFileInfo,\n      downloadUpdateOptions,\n      task: async (destinationFile, downloadOptions) => {\n        try {\n          if (\n            await this.differentialDownloadInstaller(\n              zipFileInfo,\n              downloadUpdateOptions,\n              destinationFile,\n              provider\n            )\n          ) {\n            await this.httpExecutor.download(\n              zipFileInfo.url,\n              destinationFile,\n              downloadOptions\n            );\n          }\n        } catch (e) {\n          console.log(e);\n        }\n      },\n      done: async event => {\n        const downloadedFile = event.downloadedFile;\n        this.updateInfoForPendingUpdateDownloadedEvent = event;\n        let updateFileSize = zipFileInfo.info.size;\n        if (updateFileSize == null) {\n          updateFileSize = (await stat(downloadedFile)).size;\n        }\n\n        return await new Promise<Array<string>>((resolve, reject) => {\n          // insecure random is ok\n          const fileUrl =\n            \"/\" + Date.now() + \"-\" + Math.floor(Math.random() * 9999) + \".zip\";\n          server.on(\n            \"request\",\n            (request: IncomingMessage, response: ServerResponse) => {\n              const requestUrl = request.url!!;\n              this._logger.info(`${requestUrl} requested`);\n              if (requestUrl === \"/\") {\n                const data = Buffer.from(\n                  `{ \"url\": \"${getServerUrl()}${fileUrl}\" }`\n                );\n                response.writeHead(200, {\n                  \"Content-Type\": \"application/json\",\n                  \"Content-Length\": data.length\n                });\n                response.end(data);\n                return;\n              }\n\n              if (!requestUrl.startsWith(fileUrl)) {\n                this._logger.warn(`${requestUrl} requested, but not supported`);\n                response.writeHead(404);\n                response.end();\n                return;\n              }\n\n              this._logger.info(\n                `${fileUrl} requested by Squirrel.Mac, pipe ${downloadedFile}`\n              );\n\n              let errorOccurred = false;\n              response.on(\"finish\", () => {\n                try {\n                  setImmediate(() => server.close());\n                } finally {\n                  if (!errorOccurred) {\n                    this.nativeUpdater.removeListener(\"error\", reject);\n                    resolve([]);\n                  }\n                }\n              });\n\n              const readStream = createReadStream(downloadedFile);\n              readStream.on(\"error\", error => {\n                try {\n                  response.end();\n                } catch (e) {\n                  this._logger.warn(`cannot end response: ${e}`);\n                }\n                errorOccurred = true;\n                this.nativeUpdater.removeListener(\"error\", reject);\n                reject(new Error(`Cannot pipe \"${downloadedFile}\": ${error}`));\n              });\n\n              response.writeHead(200, {\n                \"Content-Type\": \"application/zip\",\n                \"Content-Length\": updateFileSize\n              });\n              readStream.pipe(response);\n            }\n          );\n          server.listen(0, \"127.0.0.1\", () => {\n            this.nativeUpdater.setFeedURL({\n              url: getServerUrl(),\n              headers: { \"Cache-Control\": \"no-cache\" }\n            });\n\n            this.nativeUpdater.once(\"error\", reject);\n            this.nativeUpdater.checkForUpdates();\n          });\n        });\n      }\n    });\n  }\n\n  quitAndInstall(): void {\n    this.nativeUpdater.quitAndInstall();\n  }\n}\n"],"sourceRoot":""}
